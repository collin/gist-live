fun gist_id
  return window.location.pathname.replace('/', '')

fun open_proxy
  proxy = jQuery("<iframe id='live-gist-proxy' />")
  $body
    .append(proxy)
  proxy.width(1).height(1)
  proxy.css({visibility:'hidden', position:'absolute', top:0})
  proxy[0].src = "http://localhost:8001//proxy.html"

fun open_message_runner
  runner = jQuery("<iframe id='live-gist-message-runner' />")
  $body
    .append(runner)
  runner.width(1).height(1)
  runner.css({visibility:'hidden', position:'absolute', top:0})

def gist_file_name
  return $this.prev().find('span').eq(0).text()

def gist_content
  return $this.parents('.file').find('pre:last').text()

def begin_edit store
  editAreaLoader.window_loaded()
  editAreaLoader.init({
    id : "gist-live-text-area"
    ,start_highlight: true
    ,toolbar: "search, go_to_line, |, undo, redo, |, highlight, reset_highlight, syntax_selection"
    ,allow_toggle: true })
  editAreaLoader.setValue("gist-live-text-area", store.gist_content())

  return $this.running_diff()

fun editing_gist_value
  return editAreaLoader.getValue("gist-live-text-area")

def set_previous_gist_value
  return $this.data("previous-gist-value", editing_gist_value())

def previous_gist_value
  return $this.data("previous-gist-value")

def generate_gist_patch
  var dmp = new diff_match_patch()
  var patch = dmp.patch_make($this.previous_gist_value(), editing_gist_value())
  return dmp.patch_toText(patch)

var patch
def running_diff
  .set_previous_gist_value()
  setInterval(function() {
    patch = ($this.generate_gist_patch());
    ($this.set_previous_gist_value());

  }, 500);
  return $this

fun message_runner_loop
  var frame = runner[0]
  frame.contentWindow.name = ""
  if(patch) {
    frame.contentWindow.name = JSON.stringify({
    method: 'diff', args: [patch]
    });
    patch = "";
  }
  frame.src = "http://localhost:8001//x.html"
  var i = setInterval(function() {
    var ready = false;
    try {ready = (frame.contentWindow.location.host == "gist.github.com");}
    catch(e) {};
    if(ready) {
    clearInterval(i);
    if(frame.contentWindow.name) {
    jQuery(JSON.parse(frame.contentWindow.name)).each(function(which, patch) {
    console.log(patch);
    })
    }
    message_runner_loop();
    }
  }, 50)

def edit_live_link
  .each(function() {
    var it = jQuery(this).append(edit_link.clone());
    it.data('gist-live.file-name', it.gist_file_name());
    it.data('gist-live.gist-id', gist_id());
  })

  &.gist-live-edit-link
    :click
      var store = $this
      $#live-edit-panel
        .fadeIn(function(){})
        .begin_edit(store)
        open_proxy()
        open_message_runner()
        message_runner_loop()

  return $this

$body
  .append(welcome_dialog)
  &#main > .site
    .append(live_edit_panel)

$.file .meta .actions
  .edit_live_link()

$#live-edit-panel
  .hide()

$#gist-live-welcome
  .hide()
  .center()
  .gradient({ from: '003366', to: '333333', position:'bottom'})
  .corner('wicked 20px')
  .fadeIn(1000, function(){jQuery(this).fadeOut(3000, function() {jQuery(this).remove()})})
  
  &.gradient
    .css('opacity', 0.05)

  $#gist-live-welcome :hidden
    .css('display', '')
  